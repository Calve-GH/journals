<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean class="com.github.calve.web.json.JacksonObjectMapper" id="objectMapper" factory-method="getMapper"/>

    <!-- serve static resources (*.html, ...) from src/main/webapp/ -->
    <mvc:default-servlet-handler/>

    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
        <property name="formatters">
            <set>
                <bean class="com.github.calve.web.converter.DateTimeFormatters.LocalTimeFormatter"/>
                <bean class="com.github.calve.web.converter.DateTimeFormatters.LocalDateFormatter"/>
            </set>
        </property>
    </bean>

    <context:component-scan base-package="com.github.**.web"/>

    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be referred to inside JSP files -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- use WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"/>

<!--
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
          p:cacheSeconds="60"
          p:defaultEncoding="UTF-8">
        <property name="basenames">
            <list>
                <value>messages/app</value>
            </list>
        </property>
    </bean>
-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:cacheSeconds="5"
          p:defaultEncoding="UTF-8">
        <property name="basenames" value="file:///#{systemEnvironment['MAILSYS_ROOT']}/config/messages/app"/>
        <property name="fallbackToSystemLocale" value="false"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"/>
    </bean>
    <!--https://stackoverflow.com/questions/37922973/spring-mvc-file-upload-unable-to-process-parts-as-no-multi-part-configuration-->
<!--    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"/>
    </bean>-->
</beans>